This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by FreeType configure 2.9, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = dengyouxudeMacBook-Pro.local
uname -m = x86_64
uname -r = 20.5.0
uname -s = Darwin
uname -v = Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64
Kernel configured for up to 8 processors.
4 processors are physically available.
8 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3 4 5 6 7
Primary memory available: 16.00 gigabytes
Default processor set: 550 tasks, 3126 threads, 8 processors
Load average: 2.87, Mach factor: 5.11
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/bin
PATH: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
PATH: /Users/dengyouxu/Developer/Software/kafka-eagle-web-1.4.8/bin
PATH: /Users/dengyouxu/Developer/Software/apache-ant-1.9.14/bin
PATH: /Users/dengyouxu/Developer/Software/kotlin-1.3.60/bin
PATH: /Users/dengyouxu/Developer/Software/gradle-5.6.2/bin
PATH: /Users/dengyouxu/Developer/Software/apache-maven-3.6.3/bin
PATH: /Library/Java/JavaVirtualMachines/jdk1.8.0_291.jdk/Contents/Home/bin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /usr/local/go/bin
PATH: /usr/local/share/dotnet
PATH: ~/.dotnet/tools
PATH: /Library/Apple/usr/bin
PATH: /Library/Frameworks/Mono.framework/Versions/Current/Commands
PATH: .
PATH: /Users/dengyouxu/Developer/Software/groovy-3.0.5/bin
PATH: /usr/local/mysql/bin
PATH: /usr/local/go/bin
PATH: /Users/dengyouxu/Developer/Software/scala-2.13.3/bin
PATH: /usr/local/Cellar/rabbitmq/3.8.9_1/sbin
PATH: /Users/dengyouxu/Developer/Software/sbt/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2540: checking build system type
configure:2554: result: x86_64-apple-darwin20.5.0
configure:2574: checking host system type
configure:2587: result: x86_64-apple-darwin20.5.0
configure:2659: checking for gcc
configure:2675: found /usr/bin/gcc
configure:2686: result: gcc
configure:2915: checking for C compiler version
configure:2924: gcc --version >&5
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:2935: $? = 0
configure:2924: gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:2935: $? = 0
configure:2924: gcc -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:2935: $? = 1
configure:2924: gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:2935: $? = 1
configure:2955: checking whether the C compiler works
configure:2977: gcc    conftest.c  >&5
configure:2981: $? = 0
configure:3029: result: yes
configure:3032: checking for C compiler default output file name
configure:3034: result: a.out
configure:3040: checking for suffix of executables
configure:3047: gcc -o conftest    conftest.c  >&5
configure:3051: $? = 0
configure:3073: result: 
configure:3095: checking whether we are cross compiling
configure:3103: gcc -o conftest    conftest.c  >&5
In file included from conftest.c:9:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:9:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
13 warnings generated.
configure:3107: $? = 0
configure:3114: ./conftest
configure:3118: $? = 0
configure:3133: result: no
configure:3138: checking for suffix of object files
configure:3160: gcc -c   conftest.c >&5
configure:3164: $? = 0
configure:3185: result: o
configure:3189: checking whether we are using the GNU C compiler
configure:3208: gcc -c   conftest.c >&5
configure:3208: $? = 0
configure:3217: result: yes
configure:3226: checking whether gcc accepts -g
configure:3246: gcc -c -g  conftest.c >&5
configure:3246: $? = 0
configure:3287: result: yes
configure:3304: checking for gcc option to accept ISO C89
configure:3367: gcc  -c -g -O2  conftest.c >&5
In file included from conftest.c:10:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:10:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
13 warnings generated.
configure:3367: $? = 0
configure:3380: result: none needed
configure:3405: checking how to run the C preprocessor
configure:3436: gcc -E  conftest.c
configure:3436: $? = 0
configure:3450: gcc -E  conftest.c
conftest.c:9:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:3450: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "FreeType"
| #define PACKAGE_TARNAME "freetype"
| #define PACKAGE_VERSION "2.9"
| #define PACKAGE_STRING "FreeType 2.9"
| #define PACKAGE_BUGREPORT "freetype@nongnu.org"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3475: result: gcc -E
configure:3495: gcc -E  conftest.c
configure:3495: $? = 0
configure:3509: gcc -E  conftest.c
conftest.c:9:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:3509: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "FreeType"
| #define PACKAGE_TARNAME "freetype"
| #define PACKAGE_VERSION "2.9"
| #define PACKAGE_STRING "FreeType 2.9"
| #define PACKAGE_BUGREPORT "freetype@nongnu.org"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3593: checking for pkg-config
configure:3611: found /usr/local/bin/pkg-config
configure:3623: result: /usr/local/bin/pkg-config
configure:3648: checking pkg-config is at least version 0.24
configure:3651: result: yes
configure:3706: checking how to print strings
configure:3733: result: printf
configure:3754: checking for a sed that does not truncate output
configure:3818: result: /usr/local/bin/gsed
configure:3836: checking for grep that handles long lines and -e
configure:3894: result: /usr/bin/grep
configure:3899: checking for egrep
configure:3961: result: /usr/bin/grep -E
configure:3966: checking for fgrep
configure:4028: result: /usr/bin/grep -F
configure:4063: checking for ld used by gcc
configure:4130: result: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
configure:4137: checking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld
configure:4152: result: no
configure:4164: checking for BSD- or MS-compatible name lister (nm)
configure:4218: result: /usr/bin/nm -B
configure:4348: checking the name lister (/usr/bin/nm -B) interface
configure:4355: gcc -c -g -O2  conftest.c >&5
configure:4358: /usr/bin/nm -B "conftest.o"
configure:4361: output
0000000000000280 S _some_variable
configure:4368: result: BSD nm
configure:4371: checking whether ln -s works
configure:4375: result: yes
configure:4383: checking the maximum length of command line arguments
configure:4514: result: 786432
configure:4562: checking how to convert x86_64-apple-darwin20.5.0 file names to x86_64-apple-darwin20.5.0 format
configure:4602: result: func_convert_file_noop
configure:4609: checking how to convert x86_64-apple-darwin20.5.0 file names to toolchain format
configure:4629: result: func_convert_file_noop
configure:4636: checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files
configure:4643: result: -r
configure:4717: checking for objdump
configure:4733: found /usr/bin/objdump
configure:4744: result: objdump
configure:4773: checking how to recognize dependent libraries
configure:4973: result: pass_all
configure:5058: checking for dlltool
configure:5088: result: no
configure:5115: checking how to associate runtime and link libraries
configure:5142: result: printf %s\n
configure:5203: checking for ar
configure:5219: found /usr/bin/ar
configure:5230: result: ar
configure:5267: checking for archiver @FILE support
configure:5284: gcc -c -g -O2  conftest.c >&5
configure:5284: $? = 0
configure:5287: ar cru libconftest.a @conftest.lst >&5
ar: @conftest.lst: No such file or directory
configure:5290: $? = 1
configure:5310: result: no
configure:5368: checking for strip
configure:5384: found /usr/bin/strip
configure:5395: result: strip
configure:5467: checking for ranlib
configure:5483: found /usr/bin/ranlib
configure:5494: result: ranlib
configure:5571: checking for gawk
configure:5601: result: no
configure:5571: checking for mawk
configure:5601: result: no
configure:5571: checking for nawk
configure:5601: result: no
configure:5571: checking for awk
configure:5587: found /usr/bin/awk
configure:5598: result: awk
configure:5638: checking command to parse /usr/bin/nm -B output from gcc object
configure:5791: gcc -c -g -O2  conftest.c >&5
configure:5794: $? = 0
configure:5798: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([BCDEGRST][BCDEGRST]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:5801: $? = 0
cannot find nm_test_var in conftest.nm
configure:5791: gcc -c -g -O2  conftest.c >&5
configure:5794: $? = 0
configure:5798: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([BCDEGRST][BCDEGRST]*\)[ ][ ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:5801: $? = 0
configure:5867: gcc -o conftest -g -O2   conftest.c conftstm.o >&5
warning: (x86_64)  could not find object file symbol for symbol _main
configure:5870: $? = 0
configure:5908: result: ok
configure:5955: checking for sysroot
configure:5985: result: no
configure:5992: checking for a working dd
configure:6030: result: /bin/dd
configure:6034: checking how to truncate binary pipes
configure:6049: result: /bin/dd bs=4096 count=1
configure:6378: checking for mt
configure:6408: result: no
configure:6428: checking if : is a manifest tool
configure:6434: : '-?'
configure:6442: result: no
configure:6498: checking for dsymutil
configure:6514: found /usr/bin/dsymutil
configure:6525: result: dsymutil
configure:6590: checking for nmedit
configure:6606: found /usr/bin/nmedit
configure:6617: result: nmedit
configure:6682: checking for lipo
configure:6698: found /usr/bin/lipo
configure:6709: result: lipo
configure:6774: checking for otool
configure:6790: found /usr/bin/otool
configure:6801: result: otool
configure:6866: checking for otool64
configure:6896: result: no
configure:6941: checking for -single_module linker flag
gcc -g -O2  -o libconftest.dylib -dynamiclib -Wl,-single_module conftest.c
configure:6974: result: yes
configure:6977: checking for -exported_symbols_list linker flag
configure:6997: gcc -o conftest -g -O2   -Wl,-exported_symbols_list,conftest.sym conftest.c  >&5
configure:6997: $? = 0
configure:7007: result: yes
configure:7010: checking for -force_load linker flag
gcc -g -O2 -c -o conftest.o conftest.c
ar cru libconftest.a conftest.o
ranlib libconftest.a
gcc -g -O2  -o conftest conftest.c -Wl,-force_load,./libconftest.a
configure:7042: result: yes
configure:7115: checking for ANSI C header files
configure:7135: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:9:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
180 warnings generated.
configure:7135: $? = 0
configure:7208: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:10:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
180 warnings generated.
configure:7208: $? = 0
configure:7208: ./conftest
configure:7208: $? = 0
configure:7219: result: yes
configure:7232: checking for sys/types.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:10:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:10:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:18:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for sys/stat.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:11:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:11:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:19:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for stdlib.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:12:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:12:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:20:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for string.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:13:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:13:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:21:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for memory.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:14:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:14:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:22:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for strings.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:15:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:15:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:23:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for inttypes.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:16:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:16:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:24:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for stdint.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:17:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:17:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:25:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7232: checking for unistd.h
configure:7232: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:18:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:18:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:26:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7232: $? = 0
configure:7232: result: yes
configure:7246: checking for dlfcn.h
configure:7246: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:19:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:19:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:27:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:7246: $? = 0
configure:7246: result: yes
configure:7800: checking for objdir
configure:7815: result: .libs
configure:8075: checking if gcc supports -fno-rtti -fno-exceptions
configure:8093: gcc -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
configure:8097: $? = 0
configure:8110: result: yes
configure:8468: checking for gcc option to produce PIC
configure:8475: result: -fno-common -DPIC
configure:8483: checking if gcc PIC flag -fno-common -DPIC works
configure:8501: gcc -c -g -O2  -fno-common -DPIC -DPIC conftest.c >&5
configure:8505: $? = 0
configure:8518: result: yes
configure:8547: checking if gcc static flag -static works
configure:8575: result: no
configure:8590: checking if gcc supports -c -o file.o
configure:8611: gcc -c -g -O2  -o out/conftest2.o conftest.c >&5
configure:8615: $? = 0
configure:8637: result: yes
configure:8645: checking if gcc supports -c -o file.o
configure:8692: result: yes
configure:8725: checking whether the gcc linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries
configure:9984: result: yes
configure:10224: checking dynamic linker characteristics
configure:11042: result: darwin20.5.0 dyld
configure:11164: checking how to hardcode library paths into programs
configure:11189: result: immediate
configure:11737: checking whether stripping libraries is possible
configure:11751: result: yes
configure:11777: checking if libtool supports shared libraries
configure:11779: result: yes
configure:11782: checking whether to build shared libraries
configure:11807: result: yes
configure:11810: checking whether to build static libraries
configure:11814: result: yes
configure:12030: checking for a BSD-compatible install
configure:12098: result: /usr/bin/install -c
configure:12117: checking for a thread-safe mkdir -p
configure:12156: result: ./install-sh -c -d
configure:12170: checking for ANSI C header files
configure:12274: result: yes
configure:12285: checking fcntl.h usability
configure:12285: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:22:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:22:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:30:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:12285: $? = 0
configure:12285: result: yes
configure:12285: checking fcntl.h presence
configure:12285: gcc -E  conftest.c
configure:12285: $? = 0
configure:12285: result: yes
configure:12285: checking for fcntl.h
configure:12285: result: yes
configure:12285: checking for unistd.h
configure:12285: result: yes
configure:12299: checking for an ANSI C-conforming const
configure:12365: gcc -c -g -O2  conftest.c >&5
configure:12365: $? = 0
configure:12372: result: yes
configure:12384: checking size of int
configure:12389: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:24:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:24:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:32:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:12389: $? = 0
configure:12389: ./conftest
configure:12389: $? = 0
configure:12403: result: 4
configure:12417: checking size of long
configure:12422: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:25:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:25:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:33:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:12422: $? = 0
configure:12422: ./conftest
configure:12422: $? = 0
configure:12436: result: 8
configure:12447: checking for unsigned long long int
configure:12486: gcc -o conftest -g -O2   conftest.c  >&5
configure:12486: $? = 0
configure:12495: result: yes
configure:12505: checking for long long int
configure:12543: gcc -o conftest -g -O2   conftest.c  >&5
configure:12543: $? = 0
configure:12543: ./conftest
configure:12543: $? = 0
configure:12555: result: yes
configure:12567: checking whether cpp computation of bit length in ftconfig.in works
configure:12622: result: yes
configure:12651: checking for special C compiler options needed for large files
configure:12696: result: no
configure:12702: checking for _FILE_OFFSET_BITS value needed for large files
configure:12727: gcc -c -g -O2  conftest.c >&5
configure:12727: $? = 0
configure:12759: result: no
configure:12861: checking for stdlib.h
configure:12861: result: yes
configure:12861: checking for unistd.h
configure:12861: result: yes
configure:12861: checking for sys/param.h
configure:12861: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:30:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:30:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:38:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:12861: $? = 0
configure:12861: result: yes
configure:12881: checking for getpagesize
configure:12881: gcc -o conftest -g -O2   conftest.c  >&5
configure:12881: $? = 0
configure:12881: result: yes
configure:12890: checking for working mmap
configure:13037: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:32:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:32:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:40:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:13037: $? = 0
configure:13037: ./conftest
configure:13037: $? = 0
configure:13047: result: yes
configure:13063: checking whether munmap is declared
configure:13063: gcc -c -g -O2  conftest.c >&5
configure:13063: $? = 0
configure:13063: result: yes
configure:13083: checking for munmap's first parameter type
configure:13097: gcc -c -g -O2  conftest.c >&5
configure:13097: $? = 0
configure:13098: result: void *
configure:13115: checking for memcpy
configure:13115: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c:58:6: warning: incompatible redeclaration of library function 'memcpy' [-Wincompatible-library-redeclaration]
char memcpy ();
     ^
conftest.c:58:6: note: 'memcpy' is a builtin with type 'void *(void *, const void *, unsigned long)'
1 warning generated.
configure:13115: $? = 0
configure:13115: result: yes
configure:13115: checking for memmove
configure:13115: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c:59:6: warning: incompatible redeclaration of library function 'memmove' [-Wincompatible-library-redeclaration]
char memmove ();
     ^
conftest.c:59:6: note: 'memmove' is a builtin with type 'void *(void *, const void *, unsigned long)'
1 warning generated.
configure:13115: $? = 0
configure:13115: result: yes
configure:13167: checking gcc compiler flag -pedantic to assure ANSI C works correctly
configure:13194: gcc -c -g -O2  -pedantic  conftest.c >&5
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:137:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _close)(void *);
                   ^
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _read) (void *, char *, int);
                   ^
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:12: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                   ^
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _write)(void *, const char *, int);
                   ^
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:40:
/usr/local/include/stdio.h:385:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *, char *, int),
                        ^
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *, const char *, int),
                        ^
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:28: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                           ^
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *));
                        ^
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
21 warnings generated.
configure:13194: $? = 0
configure:13195: result: ok, adding to XX_ANSIFLAGS
configure:13167: checking gcc compiler flag -ansi to assure ANSI C works correctly
configure:13194: gcc -c -g -O2  -pedantic -ansi  conftest.c >&5
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:68:
/usr/local/include/sys/cdefs.h:446:22: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define __alloc_size(...) __attribute__((alloc_size(__VA_ARGS__)))
                     ^
/usr/local/include/sys/cdefs.h:450:8: warning: // comments are not allowed in this language [-Wcomment]
#endif // __alloc_size
       ^
/usr/local/include/sys/cdefs.h:857:35: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define __enum_decl(_name, _type, ...) \
                                  ^
/usr/local/include/sys/cdefs.h:859:42: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define __enum_closed_decl(_name, _type, ...) \
                                         ^
/usr/local/include/sys/cdefs.h:861:38: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define __options_decl(_name, _type, ...) \
                                     ^
/usr/local/include/sys/cdefs.h:863:45: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define __options_closed_decl(_name, _type, ...) \
                                            ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:69:
In file included from /usr/local/include/Availability.h:136:
/usr/local/include/AvailabilityInternal.h:4475:65: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_AVAILABLE_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,NAME,...) NAME
                                                                ^
/usr/local/include/AvailabilityInternal.h:4490:71: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_AVAILABLE_BEGIN_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,NAME,...) NAME
                                                                      ^
/usr/local/include/AvailabilityInternal.h:4523:73: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_MSG_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
                                                                        ^
/usr/local/include/AvailabilityInternal.h:4534:79: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_BEGIN_MSG_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
                                                                              ^
/usr/local/include/AvailabilityInternal.h:4549:73: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_REP_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
                                                                        ^
/usr/local/include/AvailabilityInternal.h:4564:79: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_BEGIN_REP_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
                                                                              ^
/usr/local/include/AvailabilityInternal.h:4604:67: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_UNAVAILABLE_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,NAME,...) NAME
                                                                  ^
/usr/local/include/AvailabilityInternal.h:4615:73: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_UNAVAILABLE_BEGIN_GET_MACRO(_1,_2,_3,_4,_5,_6,_7,NAME,...) NAME
                                                                        ^
/usr/local/include/AvailabilityInternal.h:4664:47: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __swift_compiler_version_at_least(...) 1
                                              ^
/usr/local/include/AvailabilityInternal.h:4672:27: warning: variadic macros are a C99 feature [-Wvariadic-macros]
  #define __SPI_AVAILABLE(...)
                          ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:69:
/usr/local/include/Availability.h:381:29: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_AVAILABLE(...) __API_AVAILABLE_GET_MACRO(__VA_ARGS__,__API_AVAILABLE7, __API_AVAILABLE6, __API_AVAILABLE5, __API_AVAILABLE4, __API_AVAILABLE3, __API_AVAILABLE2, __API_AVAILABLE1, 0)(__VA_ARGS__)
                            ^
/usr/local/include/Availability.h:383:35: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_AVAILABLE_BEGIN(...) _Pragma("clang attribute push") __API_AVAILABLE_BEGIN_GET_MACRO(__VA_ARGS__,__API_AVAILABLE_BEGIN7, __API_AVAILABLE_BEGIN6, __API_AVAILABLE_BEGIN5, __API_AVAILABLE_BEGIN4, __API_AVAILABLE_BEGIN3, __API_AVAILABLE_BEGIN2, __API_AVAILABLE_BEGIN1, 0)(__VA_ARGS__)
                                  ^
/usr/local/include/Availability.h:402:30: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED(...) __API_DEPRECATED_MSG_GET_MACRO(__VA_ARGS__,__API_DEPRECATED_MSG8,__API_DEPRECATED_MSG7,__API_DEPRECATED_MSG6,__API_DEPRECATED_MSG5,__API_DEPRECATED_MSG4,__API_DEPRECATED_MSG3,__API_DEPRECATED_MSG2,__API_DEPRECATED_MSG1, 0)(__VA_ARGS__)
                             ^
/usr/local/include/Availability.h:403:47: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_WITH_REPLACEMENT(...) __API_DEPRECATED_REP_GET_MACRO(__VA_ARGS__,__API_DEPRECATED_REP8,__API_DEPRECATED_REP7,__API_DEPRECATED_REP6,__API_DEPRECATED_REP5,__API_DEPRECATED_REP4,__API_DEPRECATED_REP3,__API_DEPRECATED_REP2,__API_DEPRECATED_REP1, 0)(__VA_ARGS__)
                                              ^
/usr/local/include/Availability.h:405:36: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_BEGIN(...) _Pragma("clang attribute push") __API_DEPRECATED_BEGIN_MSG_GET_MACRO(__VA_ARGS__,__API_DEPRECATED_BEGIN_MSG8,__API_DEPRECATED_BEGIN_MSG7, __API_DEPRECATED_BEGIN_MSG6, __API_DEPRECATED_BEGIN_MSG5, __API_DEPRECATED_BEGIN_MSG4, __API_DEPRECATED_BEGIN_MSG3, __API_DEPRECATED_BEGIN_MSG2, __API_DEPRECATED_BEGIN_MSG1, 0)(__VA_ARGS__)
                                   ^
/usr/local/include/Availability.h:408:53: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_DEPRECATED_WITH_REPLACEMENT_BEGIN(...) _Pragma("clang attribute push") __API_DEPRECATED_BEGIN_REP_GET_MACRO(__VA_ARGS__,__API_DEPRECATED_BEGIN_REP8,__API_DEPRECATED_BEGIN_REP7, __API_DEPRECATED_BEGIN_REP6, __API_DEPRECATED_BEGIN_REP5, __API_DEPRECATED_BEGIN_REP4, __API_DEPRECATED_BEGIN_REP3, __API_DEPRECATED_BEGIN_REP2, __API_DEPRECATED_BEGIN_REP1, 0)(__VA_ARGS__)
                                                    ^
/usr/local/include/Availability.h:419:31: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_UNAVAILABLE(...) __API_UNAVAILABLE_GET_MACRO(__VA_ARGS__,__API_UNAVAILABLE7,__API_UNAVAILABLE6,__API_UNAVAILABLE5,__API_UNAVAILABLE4,__API_UNAVAILABLE3,__API_UNAVAILABLE2,__API_UNAVAILABLE1, 0)(__VA_ARGS__)
                              ^
/usr/local/include/Availability.h:421:37: warning: variadic macros are a C99 feature [-Wvariadic-macros]
    #define __API_UNAVAILABLE_BEGIN(...) _Pragma("clang attribute push") __API_UNAVAILABLE_BEGIN_GET_MACRO(__VA_ARGS__,__API_UNAVAILABLE_BEGIN7,__API_UNAVAILABLE_BEGIN6, __API_UNAVAILABLE_BEGIN5, __API_UNAVAILABLE_BEGIN4, __API_UNAVAILABLE_BEGIN3, __API_UNAVAILABLE_BEGIN2, __API_UNAVAILABLE_BEGIN1, 0)(__VA_ARGS__)
                                    ^
/usr/local/include/Availability.h:475:28: warning: variadic macros are a C99 feature [-Wvariadic-macros]
  #define __SPI_DEPRECATED(...)
                           ^
/usr/local/include/Availability.h:479:45: warning: variadic macros are a C99 feature [-Wvariadic-macros]
  #define __SPI_DEPRECATED_WITH_REPLACEMENT(...)
                                            ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:71:
In file included from /usr/local/include/_types.h:27:
In file included from /usr/local/include/sys/_types.h:33:
In file included from /usr/local/include/machine/_types.h:32:
/usr/local/include/i386/_types.h:46:9: warning: 'long long' is an extension when C99 mode is not enabled [-Wlong-long]
typedef long long               __int64_t;
        ^
/usr/local/include/i386/_types.h:47:18: warning: 'long long' is an extension when C99 mode is not enabled [-Wlong-long]
typedef unsigned long long      __uint64_t;
                 ^
/usr/local/include/i386/_types.h:78:2: warning: 'long long' is an extension when C99 mode is not enabled [-Wlong-long]
        long long       _mbstateL;                      /* for alignment */
        ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:71:
In file included from /usr/local/include/_types.h:27:
In file included from /usr/local/include/sys/_types.h:80:
/usr/local/include/sys/_pthread/_pthread_types.h:34:1: warning: // comments are not allowed in this language [-Wcomment]
// pthread opaque structures
^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:75:
In file included from /usr/local/include/sys/_types/_va_list.h:31:
In file included from /usr/local/include/machine/types.h:35:
In file included from /usr/local/include/i386/types.h:79:
/usr/local/include/sys/_types/_int64_t.h:30:9: warning: 'long long' is an extension when C99 mode is not enabled [-Wlong-long]
typedef long long               int64_t;
        ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:75:
In file included from /usr/local/include/sys/_types/_va_list.h:31:
In file included from /usr/local/include/machine/types.h:35:
In file included from /usr/local/include/i386/types.h:84:
/usr/local/include/sys/_types/_u_int64_t.h:30:18: warning: 'long long' is an extension when C99 mode is not enabled [-Wlong-long]
typedef unsigned long long      u_int64_t;
                 ^
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:137:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _close)(void *);
                   ^
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _read) (void *, char *, int);
                   ^
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:12: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                   ^
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:9: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
        int     (* _Nullable _write)(void *, const char *, int);
                   ^
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:40:
/usr/local/include/stdio.h:385:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *, char *, int),
                        ^
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *, const char *, int),
                        ^
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:28: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                           ^
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:25: warning: type nullability specifier '_Nullable' is a Clang extension [-Wnullability-extension]
                 int (* _Nullable)(void *));
                        ^
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:40:
In file included from /usr/local/include/stdio.h:407:
/usr/local/include/secure/_stdio.h:46:22: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define sprintf(str, ...) \
                     ^
/usr/local/include/secure/_stdio.h:56:28: warning: variadic macros are a C99 feature [-Wvariadic-macros]
#define snprintf(str, len, ...) \
                           ^
55 warnings generated.
configure:13194: $? = 0
configure:13195: result: ok, adding to XX_ANSIFLAGS
configure:13259: $PKG_CONFIG --exists --print-errors "$zlib_pkg"
configure:13262: $? = 0
configure:13269: checking for ZLIB
configure:13276: $PKG_CONFIG --exists --print-errors "$zlib_pkg"
configure:13279: $? = 0
configure:13293: $PKG_CONFIG --exists --print-errors "$zlib_pkg"
configure:13296: $? = 0
configure:13334: result: yes
configure:13429: $PKG_CONFIG --exists --print-errors "$bzip2_pkg"
Package bzip2 was not found in the pkg-config search path.
Perhaps you should add the directory containing `bzip2.pc'
to the PKG_CONFIG_PATH environment variable
No package 'bzip2' found
configure:13432: $? = 1
configure:13439: checking for BZIP2
configure:13446: $PKG_CONFIG --exists --print-errors "$bzip2_pkg"
Package bzip2 was not found in the pkg-config search path.
Perhaps you should add the directory containing `bzip2.pc'
to the PKG_CONFIG_PATH environment variable
No package 'bzip2' found
configure:13449: $? = 1
configure:13463: $PKG_CONFIG --exists --print-errors "$bzip2_pkg"
Package bzip2 was not found in the pkg-config search path.
Perhaps you should add the directory containing `bzip2.pc'
to the PKG_CONFIG_PATH environment variable
No package 'bzip2' found
configure:13466: $? = 1
configure:13480: result: no
No package 'bzip2' found
configure:13524: checking for BZ2_bzDecompress in -lbz2
configure:13549: gcc -o conftest -g -O2   conftest.c -lbz2   >&5
configure:13549: $? = 0
configure:13558: result: yes
configure:13561: checking bzlib.h usability
configure:13561: gcc -c -g -O2  conftest.c >&5
In file included from conftest.c:37:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:37:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:45:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
configure:13561: $? = 0
configure:13561: result: yes
configure:13561: checking bzlib.h presence
configure:13561: gcc -E  conftest.c
configure:13561: $? = 0
configure:13561: result: yes
configure:13561: checking for bzlib.h
configure:13561: result: yes
configure:13599: $PKG_CONFIG --exists --print-errors "$libpng_pkg"
configure:13602: $? = 0
configure:13609: checking for LIBPNG
configure:13616: $PKG_CONFIG --exists --print-errors "$libpng_pkg"
configure:13619: $? = 0
configure:13633: $PKG_CONFIG --exists --print-errors "$libpng_pkg"
configure:13636: $? = 0
configure:13674: result: yes
configure:13735: $PKG_CONFIG --exists --print-errors "$harfbuzz_pkg"
configure:13738: $? = 0
configure:13745: checking for HARFBUZZ
configure:13752: $PKG_CONFIG --exists --print-errors "$harfbuzz_pkg"
configure:13755: $? = 0
configure:13769: $PKG_CONFIG --exists --print-errors "$harfbuzz_pkg"
configure:13772: $? = 0
configure:13810: result: yes
configure:13849: checking for library containing clock_gettime
configure:13880: gcc -o conftest -g -O2   conftest.c  >&5
configure:13880: $? = 0
configure:13897: result: none required
configure:14728: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by FreeType config.status 2.9, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on dengyouxudeMacBook-Pro.local

config.status:1097: creating ftoption.h
config.status:1097: creating unix-cc.mk
config.status:1097: creating unix-def.mk
config.status:1097: creating ftconfig.h
config.status:1292: executing libtool commands
configure:16764:

Library configuration:
  external zlib: yes (pkg-config)
  bzip2:         yes (autoconf test)
  libpng:        yes (pkg-config)
  harfbuzz:      yes (pkg-config)


## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-apple-darwin20.5.0
ac_cv_c_compiler_gnu=yes
ac_cv_c_const=yes
ac_cv_env_BZIP2_CFLAGS_set=
ac_cv_env_BZIP2_CFLAGS_value=
ac_cv_env_BZIP2_LIBS_set=
ac_cv_env_BZIP2_LIBS_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_HARFBUZZ_CFLAGS_set=
ac_cv_env_HARFBUZZ_CFLAGS_value=
ac_cv_env_HARFBUZZ_LIBS_set=
ac_cv_env_HARFBUZZ_LIBS_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBPNG_CFLAGS_set=
ac_cv_env_LIBPNG_CFLAGS_value=
ac_cv_env_LIBPNG_LIBS_set=
ac_cv_env_LIBPNG_LIBS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_PKG_CONFIG_LIBDIR_set=
ac_cv_env_PKG_CONFIG_LIBDIR_value=
ac_cv_env_PKG_CONFIG_PATH_set=
ac_cv_env_PKG_CONFIG_PATH_value=
ac_cv_env_PKG_CONFIG_set=
ac_cv_env_PKG_CONFIG_value=
ac_cv_env_ZLIB_CFLAGS_set=
ac_cv_env_ZLIB_CFLAGS_value=
ac_cv_env_ZLIB_LIBS_set=
ac_cv_env_ZLIB_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_getpagesize=yes
ac_cv_func_memcpy=yes
ac_cv_func_memmove=yes
ac_cv_func_mmap_fixed_mapped=yes
ac_cv_have_decl_munmap=yes
ac_cv_header_bzlib_h=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-apple-darwin20.5.0
ac_cv_lib_bz2_BZ2_bzDecompress=yes
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_FGREP='/usr/bin/grep -F'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_SED=/usr/local/bin/gsed
ac_cv_path_ac_pt_PKG_CONFIG=/usr/local/bin/pkg-config
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_lt_DD=/bin/dd
ac_cv_prog_AWK=awk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_DSYMUTIL=dsymutil
ac_cv_prog_ac_ct_LIPO=lipo
ac_cv_prog_ac_ct_NMEDIT=nmedit
ac_cv_prog_ac_ct_OBJDUMP=objdump
ac_cv_prog_ac_ct_OTOOL=otool
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_search_clock_gettime='none required'
ac_cv_sizeof_int=4
ac_cv_sizeof_long=8
ac_cv_sys_file_offset_bits=no
ac_cv_sys_largefile_CC=no
ac_cv_type_long_long_int=yes
ac_cv_type_unsigned_long_long_int=yes
lt_cv_apple_cc_single_mod=yes
lt_cv_ar_at_file=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_exported_symbols_list=yes
lt_cv_ld_force_load=yes
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
lt_cv_path_NM='/usr/bin/nm -B'
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic='-fno-common -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=no
lt_cv_prog_gnu_ld=no
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST][BCDEGRST]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST][BCDEGRST]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[BCDEGRST][BCDEGRST]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[BCDEGRST][BCDEGRST]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=
lt_cv_sys_max_cmd_len=786432
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
lt_cv_truncate_bin='/bin/dd bs=4096 count=1'
pkg_cv_HARFBUZZ_CFLAGS='-I/usr/local/Cellar/harfbuzz/2.8.1/include/harfbuzz -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/graphite2/1.3.14/include -I/usr/local/Cellar/glib/2.68.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.68.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.45/include'
pkg_cv_HARFBUZZ_LIBS='-L/usr/local/Cellar/harfbuzz/2.8.1/lib -lharfbuzz'
pkg_cv_LIBPNG_CFLAGS=-I/usr/local/Cellar/libpng/1.6.37/include/libpng16
pkg_cv_LIBPNG_LIBS='-L/usr/local/Cellar/libpng/1.6.37/lib -lpng16 -lz'
pkg_cv_ZLIB_CFLAGS=
pkg_cv_ZLIB_LIBS=-lz

## ----------------- ##
## Output variables. ##
## ----------------- ##

AR='ar'
AS='as'
AWK='awk'
BZIP2_CFLAGS=''
BZIP2_LIBS='-lbz2'
CC='gcc'
CC_BUILD='gcc'
CFLAGS='-g -O2 -DDARWIN_NO_CARBON   -I/usr/local/Cellar/libpng/1.6.37/include/libpng16 -I/usr/local/Cellar/harfbuzz/2.8.1/include/harfbuzz -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/graphite2/1.3.14/include -I/usr/local/Cellar/glib/2.68.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.68.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.45/include'
CPP='gcc -E'
CPPFLAGS=''
DEFS='-DHAVE_CONFIG_H'
DLLTOOL='false'
DSYMUTIL='dsymutil'
DUMPBIN=''
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP='/usr/bin/grep -E'
EXEEXT=''
EXEEXT_BUILD=''
FGREP='/usr/bin/grep -F'
FTSYS_SRC='$(BUILD_DIR)/ftsystem.c'
GREP='/usr/bin/grep'
HARFBUZZ_CFLAGS='-I/usr/local/Cellar/harfbuzz/2.8.1/include/harfbuzz -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/graphite2/1.3.14/include -I/usr/local/Cellar/glib/2.68.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.68.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.45/include'
HARFBUZZ_LIBS='-L/usr/local/Cellar/harfbuzz/2.8.1/lib -lharfbuzz'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LD='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
LDFLAGS=' -lz -lbz2 -L/usr/local/Cellar/libpng/1.6.37/lib -lpng16 -lz -L/usr/local/Cellar/harfbuzz/2.8.1/lib -lharfbuzz'
LIBOBJS=''
LIBPNG_CFLAGS='-I/usr/local/Cellar/libpng/1.6.37/include/libpng16'
LIBPNG_LIBS='-L/usr/local/Cellar/libpng/1.6.37/lib -lpng16 -lz'
LIBS=''
LIBSSTATIC_CONFIG='-lfreetype -lz -lbz2 -L/usr/local/Cellar/libpng/1.6.37/lib -lpng16 -lz -L/usr/local/Cellar/harfbuzz/2.8.1/lib -L/usr/local/opt/freetype/lib -L/usr/local/Cellar/libpng/1.6.37/lib -L/usr/local/Cellar/graphite2/1.3.14/lib -L/usr/local/Cellar/glib/2.68.3/lib -L/usr/local/opt/gettext/lib -L/usr/local/Cellar/pcre/8.45/lib -lharfbuzz -lm -framework ApplicationServices -lfreetype -lz -lbz2 -lpng16 -lz -lgraphite2 -lglib-2.0 -lintl -Wl,-framework,CoreFoundation -Wl,-framework,Carbon -Wl,-framework,Foundation -Wl,-framework,AppKit -liconv -lm -lpcre -D_THREAD_SAFE -pthread'
LIBS_PRIVATE='-lbz2'
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIB_CLOCK_GETTIME=''
LIPO='lipo'
LN_S='ln -s'
LTLIBOBJS=''
LT_SYS_LIBRARY_PATH=''
MANIFEST_TOOL=':'
MKDIR_P='/Users/dengyouxu/Developer/Software/openjdk8u/jdk8u-xcode10/tools/freetype/builds/unix/./install-sh -c -d'
NM='/usr/bin/nm -B'
NMEDIT='nmedit'
OBJDUMP='objdump'
OBJEXT='o'
OTOOL64=':'
OTOOL='otool'
PACKAGE_BUGREPORT='freetype@nongnu.org'
PACKAGE_NAME='FreeType'
PACKAGE_STRING='FreeType 2.9'
PACKAGE_TARNAME='freetype'
PACKAGE_URL=''
PACKAGE_VERSION='2.9'
PATH_SEPARATOR=':'
PKG_CONFIG='/usr/local/bin/pkg-config'
PKG_CONFIG_LIBDIR=''
PKG_CONFIG_PATH=''
RANLIB='ranlib'
REQUIRES_PRIVATE='zlib, libpng, harfbuzz >= 0.9.21'
SED='/usr/local/bin/gsed'
SHELL='/bin/sh'
STRIP='strip'
XX_ANSIFLAGS=' -pedantic -ansi'
XX_CFLAGS='-Wall'
ZLIB_CFLAGS=''
ZLIB_LIBS='-lz'
ac_ct_AR='ar'
ac_ct_CC='gcc'
ac_ct_DUMPBIN=''
bindir='${exec_prefix}/bin'
build='x86_64-apple-darwin20.5.0'
build_alias=''
build_cpu='x86_64'
build_libtool_libs=''
build_os='darwin20.5.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
ft_version='22.0.16'
ftmac_c=''
hardcode_libdir_flag_spec=''
host='x86_64-apple-darwin20.5.0'
host_alias=''
host_cpu='x86_64'
host_os='darwin20.5.0'
host_vendor='apple'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''
version_info='22:0:16'
wl='-Wl,'

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "FreeType"
#define PACKAGE_TARNAME "freetype"
#define PACKAGE_VERSION "2.9"
#define PACKAGE_STRING "FreeType 2.9"
#define PACKAGE_BUGREPORT "freetype@nongnu.org"
#define PACKAGE_URL ""
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define STDC_HEADERS 1
#define HAVE_FCNTL_H 1
#define HAVE_UNISTD_H 1
#define SIZEOF_INT 4
#define SIZEOF_LONG 8
#define HAVE_UNSIGNED_LONG_LONG_INT 1
#define HAVE_LONG_LONG_INT 1
#define HAVE_STDLIB_H 1
#define HAVE_UNISTD_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_MMAP 1
#define HAVE_DECL_MUNMAP 1
#define MUNMAP_USES_VOIDP /**/
#define HAVE_MEMCPY 1
#define HAVE_MEMMOVE 1

configure: exit 0
